name: API Smoke (data.go.kr)

on:
  workflow_dispatch:

jobs:
  call-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install -q --upgrade pip
          pip install -q requests

      - name: Probe endpoints (HTTPS first, then HTTP)
        env:
          SERVICE_KEY: ${{ secrets.SERVICE_KEY }}
        run: |
          python - <<'PY'
          import os, requests, ssl, json, pathlib
          svc = (os.environ.get("SERVICE_KEY") or "").strip()
          assert svc, "SERVICE_KEY is empty"

          CANDIDATES = [
            "https://apis.data.go.kr/B551011/KorService1/areaBasedList1",
            "https://apis.data.go.kr/B551011/KorService/areaBasedList1",
            "http://apis.data.go.kr/B551011/KorService1/areaBasedList1",
            "http://apis.data.go.kr/B551011/KorService/areaBasedList1",
          ]
          params = {
            "MobileOS": "ETC",
            "MobileApp": "CI-Smoke",
            "_type": "json",
            "areaCode": 51,
            "sigunguCode": 51130,
            "listYN": "Y",
            "arrange": "A",
            "numOfRows": 5,
            "pageNo": 1,
            "serviceKey": svc,
          }
          hdrs = {"Accept":"application/json,*/*","User-Agent":"ci-smoke/1.0"}
          logs=[]
          pathlib.Path("out").mkdir(exist_ok=True)
          winner=None
          for u in CANDIDATES:
            try:
              r=requests.get(u, params=params, timeout=20, headers=hdrs)
              logs.append(f"{u} -> {r.status_code} {r.headers.get('content-type')}")
              if "json" in (r.headers.get("content-type") or "").lower():
                data=r.json()
                code=(((data.get("response") or {}).get("header") or {}).get("resultCode"))
                if code=="0000":
                  winner=(u,data); break
                else:
                  open("out/last_json.json","w",encoding="utf-8").write(json.dumps(data, ensure_ascii=False, indent=2))
              else:
                open("out/last_non_json.txt","w",encoding="utf-8").write(r.text[:2000])
            except Exception as e:
              logs.append(f"error {u}: {e!r}")
          open("out/attempts.log","w",encoding="utf-8").write("\n".join(logs))
          if winner:
            u,data=winner
            items=((((data.get("response") or {}).get("body") or {}).get("items") or {}).get("item") or [])
            if isinstance(items, dict): items=[items]
            open("out/winner.txt","w").write(u)
            open("out/pois.json","w",encoding="utf-8").write(json.dumps(items, ensure_ascii=False, indent=2))
            print(f"[OK] {u}  items={len(items)}")
          else:
            raise SystemExit("No candidate returned valid JSON with code=0000")
          PY

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-smoke-output
          path: out/*
